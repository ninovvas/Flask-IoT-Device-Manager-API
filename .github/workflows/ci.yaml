name: Python complaint system

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15.0
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres1234
          POSTGRES_DB: iot_device_manager_testing
        ports:
          - 5432:5432
        # Needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Black for code formatting
        run: |
          black --check .
        # Run Black in check mode to confirm compliance without modifying files

      - name: Run tests
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres1234
          DB_PORT: '5432'
          DB_NAME: iot_device_manager_testing
          TEST_DB_USER: "postgres"
          TEST_DB_PASSWORD: "postgres1234"
          TEST_DB_PORT: 5432
          TEST_DB_NAME: "iot_device_manager_testing"
          SECRET_KEY: ""
          CONFIG_ENV: "config.TestingConfig"
          AWS_ACCESS_KEY: ""
          AWS_SECRET: ""
          AWS_BUCKET: ""
          AWS_REGION: ""
          WISE_API_KEY: ""
          WISE_URL: ""
          WISE_PROFILE_ID: ""
          EMAIL_SENDER: ""
        run: |
          export PGPASSWORD="test@123"
          export SENDGRID_API_KEY="test"
          export FROM_EMAIL="test@abv.bg"
          export TO_EMAIL="test_to_email@abv.bg"
          export SENDGRID_TEMPLATE_ID="1234"
          export ENABLE_SENDGRID="zrnfhzrmd"
          export ENABLE_MAILEROO_SERVICE="False"
          export MAILERSEND_API_KEY="kdknfdnfgmfng"
          pytest
